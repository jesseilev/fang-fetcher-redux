{"version":3,"sources":["actions.js","Components/Repo.js","Components/Company.js","Components/Selector.js","Containers/App.js","tasks.js","reducers.js","index.js"],"names":["receiveReposFail","type","clockDidTick","companyName","Repo","props","repo","react_default","a","createElement","lib","className","key","name","xs","sm","md","align","style","padding","dist_default","flexDirection","href","html_url","numeral","stargazers_count","format","description","Company","repos","company","onClickToFetch","bloodDrips","n","items","drip","blank","sequence","R","ticksSinceRequest","fetchView","isFetching","height","justifyContent","paddingTop","onClick","alignItems","flexGrow","length","gutter","width","Components_Repo","Selector","options","selectedItem","onSelect","flex","option","isSelected","selected","title","slice","toUpperCase","Header","element","Footer","marginLeft","marginRight","connect","state","companies","selectedCompany","dispatch","Actions","alignContent","App_Header","maxWidth","Components_Selector","Object","values","Components_Company","App_Footer","fetchRepo","fetch","concat","queryString","then","response","json","tickClock","Promise","resolve","setTimeout","initCompany","githubName","initialState","Facebook","Amazon","Netflix","Google","arguments","undefined","action","fetchRepoCmd","Loop","run","Tasks","successActionCreator","failActionCreator","args","startClockCmd","objectSpread","list","alert","rootReducer","middleware","compose","store","createStore","ReactDOM","render","es","Containers_App","document","getElementById","subscribe","console","log","getState"],"mappings":"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","file":"static/js/main.51205653.chunk.js","sourcesContent":["\nimport * as R from 'ramda';\n\n\n\nexport const SELECT_COMPANY = 'SELECT_COMPANY';\nexport const REQUEST_REPOS = 'REQUEST_REPOS';\nexport const RECEIVE_REPOS_SUCCESS = 'RECEIVE_REPOS_SUCCESS';\nexport const RECEIVE_REPOS_FAIL = 'RECEIVE_REPOS_FAIL';\nexport const CLOCK_DID_TICK = 'CLOCK_DID_TICK';\n\n\nexport const selectCompany = companyName => {\n  return {\n    type: SELECT_COMPANY,\n    companyName\n  }\n}\n\nexport const requestRepos = (companyName) => {\n  return {\n    type: REQUEST_REPOS,\n    companyName\n  };\n};\n\nexport const receiveReposSuccess = companyName => {\n  return json => {\n    return {\n      type: RECEIVE_REPOS_SUCCESS,\n      companyName,\n      repos: R.take(18, json.items)\n    };\n  };\n};\n\nexport const receiveReposFail = () => {\n  return {\n    type: RECEIVE_REPOS_FAIL\n  };\n};\n\nexport const clockDidTick = companyName => {\n  return () => ({\n    type: CLOCK_DID_TICK,\n    companyName\n  });\n}\n","import React from 'react';\nimport Flexbox from 'flexbox-react';\nimport numeral from 'numeral';\nimport { Row, Col } from 'react-simple-flex-grid';\n\n\nconst styles = {\n  repo: {\n    border: '1px solid #eee',\n    boxShadow: '1px 1px 5px 0px rgba(0, 0, 0, 0.02)'\n  }\n};\n\nconst prettyNumber = n => {\n  // if (n < 1000) {\n  //   return n;\n  // }\n\n  // return (n / 1000) \n\n};\n\n\nconst Repo = props => {\n  const { repo } = props;\n  return (\n    <Col\n      className='Repo-container'\n      key={repo.name}\n\n      xs={12}\n      sm={6}\n      md={4}\n      align='center'\n\n      style={{ padding: '1em' }}\n    >\n      <Flexbox\n        className='Repo'\n        flexDirection='column'\n        key={repo.name + '_container'}\n      >\n\n        <a \n          className='Repo-link'       \n          href={repo.html_url}\n          key={repo.name + '_title'}\n        >\n          {repo.name}\n        </a>\n\n        <Flexbox\n          className='Repo-stars'\n          key={repo.name + '_stars'}\n        >          \n           â˜… { numeral(repo.stargazers_count).format('0a') }\n        </Flexbox>\n\n        <Flexbox\n          className='Repo-description'\n          key={repo.name + '_description'}\n        >\n          {repo.description}\n        </Flexbox>\n\n      </Flexbox>\n    </Col>\n\n  );\n}\n\nexport default Repo;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as R from 'ramda';\nimport Flexbox from 'flexbox-react';\nimport { Row, Col } from 'react-simple-flex-grid';\nimport \"react-simple-flex-grid/lib/main.css\";\n\n\nimport Repo from './Repo';\n\n\nconst ring = (n, items) => {\n  return R.take(n, R.flatten(R.repeat(items, n)));\n}\n\nconst styles = {\n  company: isFetching => ({\n    background: 'white',\n    opacity: isFetching ? '0.5' : '1'\n  }),\n  button: {\n    height: '50px',\n    color: 'white',\n    background: 'red',\n    borderRadius: '2px',\n    boxShadow: '1px 2px 2px 0px rgba(0,0,0,0.1)'\n  }\n}\n\n\nconst Company = (props) => {\n  const { company, onClickToFetch } = props;\n\n  const FetchButton = () => (\n    <Flexbox\n      className='Company-button'\n      onClick={onClickToFetch}\n      alignItems='center'\n    >\n      Fetch repos from {company.companyName}\n    </Flexbox>\n  );\n\n\n  const bloodDrips = () => {\n    const drip = (\n      <Flexbox className='Company-blooddrip'>&nbsp; &nbsp; {\"'\"} </Flexbox> \n    );\n    const blank = (\n      <Flexbox className='Company-blooddrip'>&nbsp; &nbsp; &nbsp;</Flexbox> \n    );\n    const sequence = R.flatten([\n      drip,\n      R.repeat(blank, 3),\n      drip,\n      R.repeat(blank, 8),\n      drip,\n      R.repeat(blank, 5)\n    ]);\n    return R.take(6, R.reverse(ring(company.ticksSinceRequest, sequence)));\n  }\n\n  const Vampire = () => (\n    <Flexbox\n      className='Company-vampire'\n      flexDirection='column'\n      height='100%'\n      justifyContent='flex-start'\n      paddingTop=\"6em\"\n    >\n      <Flexbox>(^,..,^)</Flexbox>\n      { bloodDrips() }\n    </Flexbox>\n  );\n\n  const fetchView = company.isFetching ? <Vampire /> : <FetchButton />;\n\n  const reposListView = repos => {\n    return (\n      <Row \n        gutter={50}\n        align='center'\n\n        style= {{\n          width: '100%',\n          height: '100%',\n          padding: '1em'\n        }}\n      >\n        { \n          R.map(repo => <Repo repo={repo}/>, repos) \n        }\n      </Row>\n    );\n  };\n\n  return (\n    <Flexbox\n      className='Company'\n      flexDirection='column'\n      justifyContent='center'\n      alignItems='center'\n      flexGrow={1}\n    > \n      { company.repos.length > 0  \n          ? reposListView(company.repos) \n          : fetchView\n      }\n    </Flexbox>\n  );\n};\n\nexport default Company;\n\n\n\n","import React from 'react';\nimport * as R from 'ramda';\nimport Flexbox from 'flexbox-react';\n\n\nconst styles = {\n  option: isSelected => ({\n    background: isSelected ? 'white' : '#fdfdfd',\n    cursor: 'default',\n    border: isSelected ? '1px solid #eee' : '0px',\n    borderBottom: isSelected ? '0px' : '1px solid #eee',\n    borderRadius: '2px'\n  })\n}\n\nconst Selector = (props) => {\n  const { options, selectedItem, onSelect } = props;\n\n  const optionView = option => {\n    const isSelected = selectedItem == option.key;\n    return (\n      <Flexbox\n        key={ option.key }\n        onClick={ onSelect(option.key) }\n        selected={ isSelected }\n\n        flexDirection='row'\n        alignItems='center'\n        flexGrow={1}\n\n        className={ \n          isSelected \n            ? 'Selector-option Selector-option_selected' \n            : 'Selector-option' \n        }\n      >\n        <Flexbox className='Selector-option-acronym'>\n          { option.title[0] }\n        </Flexbox>\n        { option.title.slice(1).toUpperCase() }\n      </Flexbox>\n    );\n  };\n\n  return (\n    <Flexbox \n      className='Selector'\n      flexDirection='row'\n      justifyContent='space-between'\n      alignItems='stretch'\n      flex='none'\n      flexGrow={0}\n      // minHeight='50px'\n    >\n      { R.map(optionView, options) }\n    </Flexbox>\n  );\n};\n\nexport default Selector;\n","import React, { Component } from 'react';\n// import { combineReducers } from 'redux';\nimport * as Loop from 'redux-loop';\nimport { connect } from 'react-redux';\nimport * as R from 'ramda';\nimport PropTypes from 'prop-types';\nimport Flexbox from 'flexbox-react';\n\n\nimport '../App.css';\nimport * as Actions from '../actions';\nimport Company from '../Components/Company';\nimport Selector from '../Components/Selector';\n\n\nconst Header = () => (\n  <Flexbox \n    element='header'\n    className=\"App-header\"\n\n    flexDirection='column'\n    alignItems='center'\n    flex='none'\n  >\n    <Flexbox \n      className=\"App-header-title\"\n    >\n      FANG Fetcher\n    </Flexbox>\n    <Flexbox \n      className=\"App-header-subtitle\"\n    >\n      Sink your teeth into the repositories of \n      tech's most red-blooded companies.\n    </Flexbox>\n  </Flexbox>\n);\n\n\nconst Footer = () => (\n  <Flexbox element='footer'\n    className='App-footer'\n\n    flexDirection='row'\n    justifyContent='flex-end'\n    flex='none'\n  >\n    <a\n      href='https://github.com/jesseilev/fang-fetcher-redux'\n    >\n      View source on github\n    </a>\n\n    <Flexbox\n      marginLeft='1em'\n      marginRight='1em'\n    >\n      |\n    </Flexbox>\n\n    <a\n      href='https://www.investopedia.com/terms/f/fang-stocks-fb-amzn.asp'\n    >\n      Huh? What is FANG?\n    </a>\n  </Flexbox>\n);\n\nconst App = props => {\n\n  const { companies, selectedCompany, onSelect, onClickToFetch } = props;\n\n  const selectorOptionData = (company) => ({\n    key: company.companyName,\n    title: company.companyName\n  });\n\n  return (\n    <Flexbox\n      className='App'\n      flexDirection='column'\n      justifyContent='center'\n      alignItems='stretch'\n      alignContent='center'\n      height='100%'\n    >\n      <Header />\n\n      <Flexbox\n        className='App-main-container'\n        flexDirection='row'\n        justifyContent='center'\n        flexGrow={1}\n      >\n        <Flexbox\n          element='main'\n          className='App-main'\n          flexDirection='column'\n          justifyContent='flex-start'\n          alignItems='stretch'\n          maxWidth='992px'\n          flexGrow={1}\n        >\n\n          <Flexbox\n            flexDirection='column'\n            justifyContent='flex-start'\n            flexGrow={1}\n          >\n            <Selector\n              options={ R.map(selectorOptionData, Object.values(companies)) }\n              selectedItem={ selectedCompany }\n              onSelect={ onSelect }\n            />\n\n            <Company \n              company={ companies[selectedCompany] }\n              onClickToFetch={ onClickToFetch(selectedCompany) }\n            />\n          </Flexbox>\n\n        </Flexbox>\n      </Flexbox>\n\n      <Footer />\n\n    </Flexbox>\n  );\n};\n\nApp.propTypes = {\n  companies: PropTypes.object.isRequired,\n  selectedCompany: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onClickToFetch: PropTypes.func.isRequired\n};\n\n\nconst mapStateToProps = state => {\n  return {\n    companies: state.companies,\n    selectedCompany: state.selectedCompany,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSelect: companyName => (\n      () => dispatch(Actions.selectCompany(companyName))\n    ),\n    onClickToFetch: companyName => (\n      () => dispatch(Actions.requestRepos(companyName))\n    )\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","\nimport fetch from 'cross-fetch';\n\n\nconst githubUrl = 'https://api.github.com/search/repositories?q=';\n\nconst queryString = companyName => `org:${companyName}+sort:stars`;\n\nexport const fetchRepo = (companyName) => {\n  return fetch(githubUrl + queryString(companyName))\n    .then(response => response.json());\n};\n\n\nexport const tickClock = (companyName) => {\n  return new Promise(resolve => {\n    setTimeout(resolve, 50);\n  });\n};","import * as Redux from 'redux';\nimport * as Loop from 'redux-loop';\nimport * as Actions from './actions';\nimport * as Tasks from './tasks';\n\n\n\nconst initCompany = (companyName, githubName) => {\n  return {\n    companyName: companyName,\n    githubName: githubName,\n    isFetching: false,\n    ticksSinceRequest: 0,\n    repos: []\n  };\n};\n\nexport const initialState = {\n  selectedCompany: 'Facebook',\n  companies: {\n    Facebook: initCompany('Facebook', 'facebook'),\n    Amazon: initCompany('Amazon', 'amzn'),\n    Netflix: initCompany('Netflix', 'netflix'),\n    Google: initCompany('Google', 'google')\n  }\n}\n\n\nconst company = (state = initCompany('Facebook'), action) => {\n\n  if (action.companyName !== state.companyName) {\n    return state;\n  }\n\n\n  switch(action.type) {\n\n    case Actions.REQUEST_REPOS:\n      const fetchRepoCmd = Loop.Cmd.run(Tasks.fetchRepo, {\n        successActionCreator: Actions.receiveReposSuccess(state.companyName),\n        failActionCreator: Actions.receiveReposFail,\n        args: [state.githubName]\n      });\n      const startClockCmd = Loop.Cmd.action(\n        Actions.clockDidTick(state.companyName)()\n      );\n      return Loop.loop(\n        { ...state, isFetching: true },\n        Loop.Cmd.list([ fetchRepoCmd, startClockCmd ])\n      );\n\n    case Actions.RECEIVE_REPOS_SUCCESS: \n      return {\n        ...state, \n        repos: action.repos,\n        isFetching: false\n      };\n\n    case Actions.RECEIVE_REPOS_FAIL:\n      return Loop.loop(\n        { ...state, isFetching: false },\n        Loop.Cmd.run( () => alert('FAILED!') )\n        // TODO handle failure for real\n      );\n\n    case Actions.CLOCK_DID_TICK:\n      if (! state.isFetching) {\n        return { ...state, ticksSinceRequest: 0 };\n      }\n      else {\n        return Loop.loop(\n          { ...state, ticksSinceRequest: state.ticksSinceRequest + 1 },\n          Loop.Cmd.run(Tasks.tickClock, {\n            successActionCreator: Actions.clockDidTick(state.companyName),\n          })\n        );\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst companies = Loop.combineReducers({\n  Facebook: company,\n  Amazon: company,\n  Netflix: company,\n  Google: company\n});\n\nconst selectedCompany = (state = '', action) => {\n  switch(action.type) {\n    case Actions.SELECT_COMPANY:\n      return action.companyName;\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = Loop.combineReducers({\n  companies: companies,\n  selectedCompany: selectedCompany\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport * as Loop from 'redux-loop';\n\nimport './index.css';\nimport App from './Containers/App';\nimport { rootReducer, initialState } from './reducers';\n\n\nconst middleware = compose(\n  Loop.install(),\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\nconst store = createStore(rootReducer, initialState, middleware);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nstore.subscribe( () => {\n  console.log(store.getState());\n});"],"sourceRoot":""}